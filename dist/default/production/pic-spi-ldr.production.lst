

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Mar  5 00:36:42 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F15355
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.41
    20                           ; Generated 25/01/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F15355 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  0010                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  009B                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  0119                     	;# 
    82  0119                     	;# 
    83  0119                     	;# 
    84  011A                     	;# 
    85  011A                     	;# 
    86  011A                     	;# 
    87  011B                     	;# 
    88  011B                     	;# 
    89  011B                     	;# 
    90  011B                     	;# 
    91  011B                     	;# 
    92  011C                     	;# 
    93  011C                     	;# 
    94  011C                     	;# 
    95  011D                     	;# 
    96  011D                     	;# 
    97  011D                     	;# 
    98  011E                     	;# 
    99  011E                     	;# 
   100  011E                     	;# 
   101  011F                     	;# 
   102  011F                     	;# 
   103  011F                     	;# 
   104  011F                     	;# 
   105  011F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  018E                     	;# 
   109  018F                     	;# 
   110  0190                     	;# 
   111  0191                     	;# 
   112  0192                     	;# 
   113  0196                     	;# 
   114  0197                     	;# 
   115  0198                     	;# 
   116  0199                     	;# 
   117  019A                     	;# 
   118  019B                     	;# 
   119  019C                     	;# 
   120  020C                     	;# 
   121  020C                     	;# 
   122  020D                     	;# 
   123  020E                     	;# 
   124  020F                     	;# 
   125  020F                     	;# 
   126  0210                     	;# 
   127  0210                     	;# 
   128  0211                     	;# 
   129  0211                     	;# 
   130  028C                     	;# 
   131  028C                     	;# 
   132  028D                     	;# 
   133  028D                     	;# 
   134  028E                     	;# 
   135  028F                     	;# 
   136  0290                     	;# 
   137  0291                     	;# 
   138  030C                     	;# 
   139  030C                     	;# 
   140  030D                     	;# 
   141  030E                     	;# 
   142  030F                     	;# 
   143  0310                     	;# 
   144  0310                     	;# 
   145  0311                     	;# 
   146  0312                     	;# 
   147  0313                     	;# 
   148  0314                     	;# 
   149  0315                     	;# 
   150  0316                     	;# 
   151  0318                     	;# 
   152  0319                     	;# 
   153  031A                     	;# 
   154  031C                     	;# 
   155  031D                     	;# 
   156  031E                     	;# 
   157  038C                     	;# 
   158  038D                     	;# 
   159  038E                     	;# 
   160  058C                     	;# 
   161  058C                     	;# 
   162  058D                     	;# 
   163  058E                     	;# 
   164  058F                     	;# 
   165  058F                     	;# 
   166  0590                     	;# 
   167  0591                     	;# 
   168  0592                     	;# 
   169  0593                     	;# 
   170  059C                     	;# 
   171  059C                     	;# 
   172  059D                     	;# 
   173  059D                     	;# 
   174  059E                     	;# 
   175  059F                     	;# 
   176  060C                     	;# 
   177  060D                     	;# 
   178  060E                     	;# 
   179  060F                     	;# 
   180  0610                     	;# 
   181  0611                     	;# 
   182  0612                     	;# 
   183  0613                     	;# 
   184  0614                     	;# 
   185  070C                     	;# 
   186  070D                     	;# 
   187  070E                     	;# 
   188  070F                     	;# 
   189  0710                     	;# 
   190  0711                     	;# 
   191  0712                     	;# 
   192  0713                     	;# 
   193  0716                     	;# 
   194  0717                     	;# 
   195  0718                     	;# 
   196  0719                     	;# 
   197  071A                     	;# 
   198  071B                     	;# 
   199  071C                     	;# 
   200  071D                     	;# 
   201  0796                     	;# 
   202  0797                     	;# 
   203  0798                     	;# 
   204  0799                     	;# 
   205  079A                     	;# 
   206  079B                     	;# 
   207  080C                     	;# 
   208  080D                     	;# 
   209  080E                     	;# 
   210  080F                     	;# 
   211  0810                     	;# 
   212  0811                     	;# 
   213  0812                     	;# 
   214  0813                     	;# 
   215  0814                     	;# 
   216  081A                     	;# 
   217  081A                     	;# 
   218  081B                     	;# 
   219  081C                     	;# 
   220  081C                     	;# 
   221  081D                     	;# 
   222  081E                     	;# 
   223  081F                     	;# 
   224  088C                     	;# 
   225  088D                     	;# 
   226  088E                     	;# 
   227  088F                     	;# 
   228  0890                     	;# 
   229  0891                     	;# 
   230  0892                     	;# 
   231  0893                     	;# 
   232  0895                     	;# 
   233  0896                     	;# 
   234  090C                     	;# 
   235  090E                     	;# 
   236  090F                     	;# 
   237  091F                     	;# 
   238  098F                     	;# 
   239  098F                     	;# 
   240  0990                     	;# 
   241  0991                     	;# 
   242  0992                     	;# 
   243  0993                     	;# 
   244  0994                     	;# 
   245  0995                     	;# 
   246  0996                     	;# 
   247  0997                     	;# 
   248  0A19                     	;# 
   249  0A19                     	;# 
   250  0A1A                     	;# 
   251  0A1A                     	;# 
   252  0A1B                     	;# 
   253  0A1B                     	;# 
   254  0A1B                     	;# 
   255  0A1C                     	;# 
   256  0A1C                     	;# 
   257  0A1D                     	;# 
   258  0A1D                     	;# 
   259  0A1E                     	;# 
   260  0A1E                     	;# 
   261  0A1F                     	;# 
   262  0A1F                     	;# 
   263  0A1F                     	;# 
   264  1E0F                     	;# 
   265  1E10                     	;# 
   266  1E11                     	;# 
   267  1E12                     	;# 
   268  1E13                     	;# 
   269  1E14                     	;# 
   270  1E15                     	;# 
   271  1E16                     	;# 
   272  1E17                     	;# 
   273  1E18                     	;# 
   274  1E19                     	;# 
   275  1E1A                     	;# 
   276  1E1B                     	;# 
   277  1E1C                     	;# 
   278  1E1D                     	;# 
   279  1E1E                     	;# 
   280  1E1F                     	;# 
   281  1E20                     	;# 
   282  1E21                     	;# 
   283  1E22                     	;# 
   284  1E23                     	;# 
   285  1E24                     	;# 
   286  1E25                     	;# 
   287  1E26                     	;# 
   288  1E27                     	;# 
   289  1E28                     	;# 
   290  1E29                     	;# 
   291  1E2A                     	;# 
   292  1E2B                     	;# 
   293  1E2C                     	;# 
   294  1E2D                     	;# 
   295  1E2E                     	;# 
   296  1E2F                     	;# 
   297  1E30                     	;# 
   298  1E31                     	;# 
   299  1E32                     	;# 
   300  1E33                     	;# 
   301  1E34                     	;# 
   302  1E35                     	;# 
   303  1E36                     	;# 
   304  1E37                     	;# 
   305  1E8F                     	;# 
   306  1E90                     	;# 
   307  1E91                     	;# 
   308  1E92                     	;# 
   309  1E93                     	;# 
   310  1E9C                     	;# 
   311  1EA1                     	;# 
   312  1EA2                     	;# 
   313  1EB1                     	;# 
   314  1EBB                     	;# 
   315  1EBC                     	;# 
   316  1EBD                     	;# 
   317  1EBE                     	;# 
   318  1EC3                     	;# 
   319  1EC5                     	;# 
   320  1EC6                     	;# 
   321  1EC7                     	;# 
   322  1EC8                     	;# 
   323  1EC9                     	;# 
   324  1ECA                     	;# 
   325  1ECB                     	;# 
   326  1ECC                     	;# 
   327  1ECD                     	;# 
   328  1ECE                     	;# 
   329  1F10                     	;# 
   330  1F11                     	;# 
   331  1F12                     	;# 
   332  1F13                     	;# 
   333  1F14                     	;# 
   334  1F15                     	;# 
   335  1F16                     	;# 
   336  1F17                     	;# 
   337  1F18                     	;# 
   338  1F19                     	;# 
   339  1F1A                     	;# 
   340  1F1B                     	;# 
   341  1F1C                     	;# 
   342  1F1D                     	;# 
   343  1F1E                     	;# 
   344  1F1F                     	;# 
   345  1F20                     	;# 
   346  1F21                     	;# 
   347  1F22                     	;# 
   348  1F23                     	;# 
   349  1F24                     	;# 
   350  1F25                     	;# 
   351  1F26                     	;# 
   352  1F27                     	;# 
   353  1F38                     	;# 
   354  1F39                     	;# 
   355  1F3A                     	;# 
   356  1F3B                     	;# 
   357  1F3C                     	;# 
   358  1F3D                     	;# 
   359  1F3E                     	;# 
   360  1F3F                     	;# 
   361  1F43                     	;# 
   362  1F44                     	;# 
   363  1F45                     	;# 
   364  1F46                     	;# 
   365  1F47                     	;# 
   366  1F48                     	;# 
   367  1F49                     	;# 
   368  1F4A                     	;# 
   369  1F4E                     	;# 
   370  1F4F                     	;# 
   371  1F50                     	;# 
   372  1F51                     	;# 
   373  1F52                     	;# 
   374  1F53                     	;# 
   375  1F54                     	;# 
   376  1F55                     	;# 
   377  1F65                     	;# 
   378  1F68                     	;# 
   379  1F69                     	;# 
   380  1F6A                     	;# 
   381  1F6B                     	;# 
   382  1FE4                     	;# 
   383  1FE5                     	;# 
   384  1FE6                     	;# 
   385  1FE7                     	;# 
   386  1FE8                     	;# 
   387  1FE8                     	;# 
   388  1FE9                     	;# 
   389  1FEA                     	;# 
   390  1FEA                     	;# 
   391  1FEB                     	;# 
   392  1FED                     	;# 
   393  1FEE                     	;# 
   394  1FEF                     	;# 
   395  0000                     	;# 
   396  0001                     	;# 
   397  0002                     	;# 
   398  0003                     	;# 
   399  0004                     	;# 
   400  0005                     	;# 
   401  0006                     	;# 
   402  0007                     	;# 
   403  0008                     	;# 
   404  0009                     	;# 
   405  000A                     	;# 
   406  000B                     	;# 
   407  000C                     	;# 
   408  000D                     	;# 
   409  000E                     	;# 
   410  0010                     	;# 
   411  0012                     	;# 
   412  0013                     	;# 
   413  0014                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  009B                     	;# 
   418  009B                     	;# 
   419  009C                     	;# 
   420  009D                     	;# 
   421  009E                     	;# 
   422  009F                     	;# 
   423  0119                     	;# 
   424  0119                     	;# 
   425  0119                     	;# 
   426  011A                     	;# 
   427  011A                     	;# 
   428  011A                     	;# 
   429  011B                     	;# 
   430  011B                     	;# 
   431  011B                     	;# 
   432  011B                     	;# 
   433  011B                     	;# 
   434  011C                     	;# 
   435  011C                     	;# 
   436  011C                     	;# 
   437  011D                     	;# 
   438  011D                     	;# 
   439  011D                     	;# 
   440  011E                     	;# 
   441  011E                     	;# 
   442  011E                     	;# 
   443  011F                     	;# 
   444  011F                     	;# 
   445  011F                     	;# 
   446  011F                     	;# 
   447  011F                     	;# 
   448  018C                     	;# 
   449  018D                     	;# 
   450  018E                     	;# 
   451  018F                     	;# 
   452  0190                     	;# 
   453  0191                     	;# 
   454  0192                     	;# 
   455  0196                     	;# 
   456  0197                     	;# 
   457  0198                     	;# 
   458  0199                     	;# 
   459  019A                     	;# 
   460  019B                     	;# 
   461  019C                     	;# 
   462  020C                     	;# 
   463  020C                     	;# 
   464  020D                     	;# 
   465  020E                     	;# 
   466  020F                     	;# 
   467  020F                     	;# 
   468  0210                     	;# 
   469  0210                     	;# 
   470  0211                     	;# 
   471  0211                     	;# 
   472  028C                     	;# 
   473  028C                     	;# 
   474  028D                     	;# 
   475  028D                     	;# 
   476  028E                     	;# 
   477  028F                     	;# 
   478  0290                     	;# 
   479  0291                     	;# 
   480  030C                     	;# 
   481  030C                     	;# 
   482  030D                     	;# 
   483  030E                     	;# 
   484  030F                     	;# 
   485  0310                     	;# 
   486  0310                     	;# 
   487  0311                     	;# 
   488  0312                     	;# 
   489  0313                     	;# 
   490  0314                     	;# 
   491  0315                     	;# 
   492  0316                     	;# 
   493  0318                     	;# 
   494  0319                     	;# 
   495  031A                     	;# 
   496  031C                     	;# 
   497  031D                     	;# 
   498  031E                     	;# 
   499  038C                     	;# 
   500  038D                     	;# 
   501  038E                     	;# 
   502  058C                     	;# 
   503  058C                     	;# 
   504  058D                     	;# 
   505  058E                     	;# 
   506  058F                     	;# 
   507  058F                     	;# 
   508  0590                     	;# 
   509  0591                     	;# 
   510  0592                     	;# 
   511  0593                     	;# 
   512  059C                     	;# 
   513  059C                     	;# 
   514  059D                     	;# 
   515  059D                     	;# 
   516  059E                     	;# 
   517  059F                     	;# 
   518  060C                     	;# 
   519  060D                     	;# 
   520  060E                     	;# 
   521  060F                     	;# 
   522  0610                     	;# 
   523  0611                     	;# 
   524  0612                     	;# 
   525  0613                     	;# 
   526  0614                     	;# 
   527  070C                     	;# 
   528  070D                     	;# 
   529  070E                     	;# 
   530  070F                     	;# 
   531  0710                     	;# 
   532  0711                     	;# 
   533  0712                     	;# 
   534  0713                     	;# 
   535  0716                     	;# 
   536  0717                     	;# 
   537  0718                     	;# 
   538  0719                     	;# 
   539  071A                     	;# 
   540  071B                     	;# 
   541  071C                     	;# 
   542  071D                     	;# 
   543  0796                     	;# 
   544  0797                     	;# 
   545  0798                     	;# 
   546  0799                     	;# 
   547  079A                     	;# 
   548  079B                     	;# 
   549  080C                     	;# 
   550  080D                     	;# 
   551  080E                     	;# 
   552  080F                     	;# 
   553  0810                     	;# 
   554  0811                     	;# 
   555  0812                     	;# 
   556  0813                     	;# 
   557  0814                     	;# 
   558  081A                     	;# 
   559  081A                     	;# 
   560  081B                     	;# 
   561  081C                     	;# 
   562  081C                     	;# 
   563  081D                     	;# 
   564  081E                     	;# 
   565  081F                     	;# 
   566  088C                     	;# 
   567  088D                     	;# 
   568  088E                     	;# 
   569  088F                     	;# 
   570  0890                     	;# 
   571  0891                     	;# 
   572  0892                     	;# 
   573  0893                     	;# 
   574  0895                     	;# 
   575  0896                     	;# 
   576  090C                     	;# 
   577  090E                     	;# 
   578  090F                     	;# 
   579  091F                     	;# 
   580  098F                     	;# 
   581  098F                     	;# 
   582  0990                     	;# 
   583  0991                     	;# 
   584  0992                     	;# 
   585  0993                     	;# 
   586  0994                     	;# 
   587  0995                     	;# 
   588  0996                     	;# 
   589  0997                     	;# 
   590  0A19                     	;# 
   591  0A19                     	;# 
   592  0A1A                     	;# 
   593  0A1A                     	;# 
   594  0A1B                     	;# 
   595  0A1B                     	;# 
   596  0A1B                     	;# 
   597  0A1C                     	;# 
   598  0A1C                     	;# 
   599  0A1D                     	;# 
   600  0A1D                     	;# 
   601  0A1E                     	;# 
   602  0A1E                     	;# 
   603  0A1F                     	;# 
   604  0A1F                     	;# 
   605  0A1F                     	;# 
   606  1E0F                     	;# 
   607  1E10                     	;# 
   608  1E11                     	;# 
   609  1E12                     	;# 
   610  1E13                     	;# 
   611  1E14                     	;# 
   612  1E15                     	;# 
   613  1E16                     	;# 
   614  1E17                     	;# 
   615  1E18                     	;# 
   616  1E19                     	;# 
   617  1E1A                     	;# 
   618  1E1B                     	;# 
   619  1E1C                     	;# 
   620  1E1D                     	;# 
   621  1E1E                     	;# 
   622  1E1F                     	;# 
   623  1E20                     	;# 
   624  1E21                     	;# 
   625  1E22                     	;# 
   626  1E23                     	;# 
   627  1E24                     	;# 
   628  1E25                     	;# 
   629  1E26                     	;# 
   630  1E27                     	;# 
   631  1E28                     	;# 
   632  1E29                     	;# 
   633  1E2A                     	;# 
   634  1E2B                     	;# 
   635  1E2C                     	;# 
   636  1E2D                     	;# 
   637  1E2E                     	;# 
   638  1E2F                     	;# 
   639  1E30                     	;# 
   640  1E31                     	;# 
   641  1E32                     	;# 
   642  1E33                     	;# 
   643  1E34                     	;# 
   644  1E35                     	;# 
   645  1E36                     	;# 
   646  1E37                     	;# 
   647  1E8F                     	;# 
   648  1E90                     	;# 
   649  1E91                     	;# 
   650  1E92                     	;# 
   651  1E93                     	;# 
   652  1E9C                     	;# 
   653  1EA1                     	;# 
   654  1EA2                     	;# 
   655  1EB1                     	;# 
   656  1EBB                     	;# 
   657  1EBC                     	;# 
   658  1EBD                     	;# 
   659  1EBE                     	;# 
   660  1EC3                     	;# 
   661  1EC5                     	;# 
   662  1EC6                     	;# 
   663  1EC7                     	;# 
   664  1EC8                     	;# 
   665  1EC9                     	;# 
   666  1ECA                     	;# 
   667  1ECB                     	;# 
   668  1ECC                     	;# 
   669  1ECD                     	;# 
   670  1ECE                     	;# 
   671  1F10                     	;# 
   672  1F11                     	;# 
   673  1F12                     	;# 
   674  1F13                     	;# 
   675  1F14                     	;# 
   676  1F15                     	;# 
   677  1F16                     	;# 
   678  1F17                     	;# 
   679  1F18                     	;# 
   680  1F19                     	;# 
   681  1F1A                     	;# 
   682  1F1B                     	;# 
   683  1F1C                     	;# 
   684  1F1D                     	;# 
   685  1F1E                     	;# 
   686  1F1F                     	;# 
   687  1F20                     	;# 
   688  1F21                     	;# 
   689  1F22                     	;# 
   690  1F23                     	;# 
   691  1F24                     	;# 
   692  1F25                     	;# 
   693  1F26                     	;# 
   694  1F27                     	;# 
   695  1F38                     	;# 
   696  1F39                     	;# 
   697  1F3A                     	;# 
   698  1F3B                     	;# 
   699  1F3C                     	;# 
   700  1F3D                     	;# 
   701  1F3E                     	;# 
   702  1F3F                     	;# 
   703  1F43                     	;# 
   704  1F44                     	;# 
   705  1F45                     	;# 
   706  1F46                     	;# 
   707  1F47                     	;# 
   708  1F48                     	;# 
   709  1F49                     	;# 
   710  1F4A                     	;# 
   711  1F4E                     	;# 
   712  1F4F                     	;# 
   713  1F50                     	;# 
   714  1F51                     	;# 
   715  1F52                     	;# 
   716  1F53                     	;# 
   717  1F54                     	;# 
   718  1F55                     	;# 
   719  1F65                     	;# 
   720  1F68                     	;# 
   721  1F69                     	;# 
   722  1F6A                     	;# 
   723  1F6B                     	;# 
   724  1FE4                     	;# 
   725  1FE5                     	;# 
   726  1FE6                     	;# 
   727  1FE7                     	;# 
   728  1FE8                     	;# 
   729  1FE8                     	;# 
   730  1FE9                     	;# 
   731  1FEA                     	;# 
   732  1FEA                     	;# 
   733  1FEB                     	;# 
   734  1FED                     	;# 
   735  1FEE                     	;# 
   736  1FEF                     	;# 
   737  0000                     	;# 
   738  0001                     	;# 
   739  0002                     	;# 
   740  0003                     	;# 
   741  0004                     	;# 
   742  0005                     	;# 
   743  0006                     	;# 
   744  0007                     	;# 
   745  0008                     	;# 
   746  0009                     	;# 
   747  000A                     	;# 
   748  000B                     	;# 
   749  000C                     	;# 
   750  000D                     	;# 
   751  000E                     	;# 
   752  0010                     	;# 
   753  0012                     	;# 
   754  0013                     	;# 
   755  0014                     	;# 
   756  0018                     	;# 
   757  0019                     	;# 
   758  001A                     	;# 
   759  009B                     	;# 
   760  009B                     	;# 
   761  009C                     	;# 
   762  009D                     	;# 
   763  009E                     	;# 
   764  009F                     	;# 
   765  0119                     	;# 
   766  0119                     	;# 
   767  0119                     	;# 
   768  011A                     	;# 
   769  011A                     	;# 
   770  011A                     	;# 
   771  011B                     	;# 
   772  011B                     	;# 
   773  011B                     	;# 
   774  011B                     	;# 
   775  011B                     	;# 
   776  011C                     	;# 
   777  011C                     	;# 
   778  011C                     	;# 
   779  011D                     	;# 
   780  011D                     	;# 
   781  011D                     	;# 
   782  011E                     	;# 
   783  011E                     	;# 
   784  011E                     	;# 
   785  011F                     	;# 
   786  011F                     	;# 
   787  011F                     	;# 
   788  011F                     	;# 
   789  011F                     	;# 
   790  018C                     	;# 
   791  018D                     	;# 
   792  018E                     	;# 
   793  018F                     	;# 
   794  0190                     	;# 
   795  0191                     	;# 
   796  0192                     	;# 
   797  0196                     	;# 
   798  0197                     	;# 
   799  0198                     	;# 
   800  0199                     	;# 
   801  019A                     	;# 
   802  019B                     	;# 
   803  019C                     	;# 
   804  020C                     	;# 
   805  020C                     	;# 
   806  020D                     	;# 
   807  020E                     	;# 
   808  020F                     	;# 
   809  020F                     	;# 
   810  0210                     	;# 
   811  0210                     	;# 
   812  0211                     	;# 
   813  0211                     	;# 
   814  028C                     	;# 
   815  028C                     	;# 
   816  028D                     	;# 
   817  028D                     	;# 
   818  028E                     	;# 
   819  028F                     	;# 
   820  0290                     	;# 
   821  0291                     	;# 
   822  030C                     	;# 
   823  030C                     	;# 
   824  030D                     	;# 
   825  030E                     	;# 
   826  030F                     	;# 
   827  0310                     	;# 
   828  0310                     	;# 
   829  0311                     	;# 
   830  0312                     	;# 
   831  0313                     	;# 
   832  0314                     	;# 
   833  0315                     	;# 
   834  0316                     	;# 
   835  0318                     	;# 
   836  0319                     	;# 
   837  031A                     	;# 
   838  031C                     	;# 
   839  031D                     	;# 
   840  031E                     	;# 
   841  038C                     	;# 
   842  038D                     	;# 
   843  038E                     	;# 
   844  058C                     	;# 
   845  058C                     	;# 
   846  058D                     	;# 
   847  058E                     	;# 
   848  058F                     	;# 
   849  058F                     	;# 
   850  0590                     	;# 
   851  0591                     	;# 
   852  0592                     	;# 
   853  0593                     	;# 
   854  059C                     	;# 
   855  059C                     	;# 
   856  059D                     	;# 
   857  059D                     	;# 
   858  059E                     	;# 
   859  059F                     	;# 
   860  060C                     	;# 
   861  060D                     	;# 
   862  060E                     	;# 
   863  060F                     	;# 
   864  0610                     	;# 
   865  0611                     	;# 
   866  0612                     	;# 
   867  0613                     	;# 
   868  0614                     	;# 
   869  070C                     	;# 
   870  070D                     	;# 
   871  070E                     	;# 
   872  070F                     	;# 
   873  0710                     	;# 
   874  0711                     	;# 
   875  0712                     	;# 
   876  0713                     	;# 
   877  0716                     	;# 
   878  0717                     	;# 
   879  0718                     	;# 
   880  0719                     	;# 
   881  071A                     	;# 
   882  071B                     	;# 
   883  071C                     	;# 
   884  071D                     	;# 
   885  0796                     	;# 
   886  0797                     	;# 
   887  0798                     	;# 
   888  0799                     	;# 
   889  079A                     	;# 
   890  079B                     	;# 
   891  080C                     	;# 
   892  080D                     	;# 
   893  080E                     	;# 
   894  080F                     	;# 
   895  0810                     	;# 
   896  0811                     	;# 
   897  0812                     	;# 
   898  0813                     	;# 
   899  0814                     	;# 
   900  081A                     	;# 
   901  081A                     	;# 
   902  081B                     	;# 
   903  081C                     	;# 
   904  081C                     	;# 
   905  081D                     	;# 
   906  081E                     	;# 
   907  081F                     	;# 
   908  088C                     	;# 
   909  088D                     	;# 
   910  088E                     	;# 
   911  088F                     	;# 
   912  0890                     	;# 
   913  0891                     	;# 
   914  0892                     	;# 
   915  0893                     	;# 
   916  0895                     	;# 
   917  0896                     	;# 
   918  090C                     	;# 
   919  090E                     	;# 
   920  090F                     	;# 
   921  091F                     	;# 
   922  098F                     	;# 
   923  098F                     	;# 
   924  0990                     	;# 
   925  0991                     	;# 
   926  0992                     	;# 
   927  0993                     	;# 
   928  0994                     	;# 
   929  0995                     	;# 
   930  0996                     	;# 
   931  0997                     	;# 
   932  0A19                     	;# 
   933  0A19                     	;# 
   934  0A1A                     	;# 
   935  0A1A                     	;# 
   936  0A1B                     	;# 
   937  0A1B                     	;# 
   938  0A1B                     	;# 
   939  0A1C                     	;# 
   940  0A1C                     	;# 
   941  0A1D                     	;# 
   942  0A1D                     	;# 
   943  0A1E                     	;# 
   944  0A1E                     	;# 
   945  0A1F                     	;# 
   946  0A1F                     	;# 
   947  0A1F                     	;# 
   948  1E0F                     	;# 
   949  1E10                     	;# 
   950  1E11                     	;# 
   951  1E12                     	;# 
   952  1E13                     	;# 
   953  1E14                     	;# 
   954  1E15                     	;# 
   955  1E16                     	;# 
   956  1E17                     	;# 
   957  1E18                     	;# 
   958  1E19                     	;# 
   959  1E1A                     	;# 
   960  1E1B                     	;# 
   961  1E1C                     	;# 
   962  1E1D                     	;# 
   963  1E1E                     	;# 
   964  1E1F                     	;# 
   965  1E20                     	;# 
   966  1E21                     	;# 
   967  1E22                     	;# 
   968  1E23                     	;# 
   969  1E24                     	;# 
   970  1E25                     	;# 
   971  1E26                     	;# 
   972  1E27                     	;# 
   973  1E28                     	;# 
   974  1E29                     	;# 
   975  1E2A                     	;# 
   976  1E2B                     	;# 
   977  1E2C                     	;# 
   978  1E2D                     	;# 
   979  1E2E                     	;# 
   980  1E2F                     	;# 
   981  1E30                     	;# 
   982  1E31                     	;# 
   983  1E32                     	;# 
   984  1E33                     	;# 
   985  1E34                     	;# 
   986  1E35                     	;# 
   987  1E36                     	;# 
   988  1E37                     	;# 
   989  1E8F                     	;# 
   990  1E90                     	;# 
   991  1E91                     	;# 
   992  1E92                     	;# 
   993  1E93                     	;# 
   994  1E9C                     	;# 
   995  1EA1                     	;# 
   996  1EA2                     	;# 
   997  1EB1                     	;# 
   998  1EBB                     	;# 
   999  1EBC                     	;# 
  1000  1EBD                     	;# 
  1001  1EBE                     	;# 
  1002  1EC3                     	;# 
  1003  1EC5                     	;# 
  1004  1EC6                     	;# 
  1005  1EC7                     	;# 
  1006  1EC8                     	;# 
  1007  1EC9                     	;# 
  1008  1ECA                     	;# 
  1009  1ECB                     	;# 
  1010  1ECC                     	;# 
  1011  1ECD                     	;# 
  1012  1ECE                     	;# 
  1013  1F10                     	;# 
  1014  1F11                     	;# 
  1015  1F12                     	;# 
  1016  1F13                     	;# 
  1017  1F14                     	;# 
  1018  1F15                     	;# 
  1019  1F16                     	;# 
  1020  1F17                     	;# 
  1021  1F18                     	;# 
  1022  1F19                     	;# 
  1023  1F1A                     	;# 
  1024  1F1B                     	;# 
  1025  1F1C                     	;# 
  1026  1F1D                     	;# 
  1027  1F1E                     	;# 
  1028  1F1F                     	;# 
  1029  1F20                     	;# 
  1030  1F21                     	;# 
  1031  1F22                     	;# 
  1032  1F23                     	;# 
  1033  1F24                     	;# 
  1034  1F25                     	;# 
  1035  1F26                     	;# 
  1036  1F27                     	;# 
  1037  1F38                     	;# 
  1038  1F39                     	;# 
  1039  1F3A                     	;# 
  1040  1F3B                     	;# 
  1041  1F3C                     	;# 
  1042  1F3D                     	;# 
  1043  1F3E                     	;# 
  1044  1F3F                     	;# 
  1045  1F43                     	;# 
  1046  1F44                     	;# 
  1047  1F45                     	;# 
  1048  1F46                     	;# 
  1049  1F47                     	;# 
  1050  1F48                     	;# 
  1051  1F49                     	;# 
  1052  1F4A                     	;# 
  1053  1F4E                     	;# 
  1054  1F4F                     	;# 
  1055  1F50                     	;# 
  1056  1F51                     	;# 
  1057  1F52                     	;# 
  1058  1F53                     	;# 
  1059  1F54                     	;# 
  1060  1F55                     	;# 
  1061  1F65                     	;# 
  1062  1F68                     	;# 
  1063  1F69                     	;# 
  1064  1F6A                     	;# 
  1065  1F6B                     	;# 
  1066  1FE4                     	;# 
  1067  1FE5                     	;# 
  1068  1FE6                     	;# 
  1069  1FE7                     	;# 
  1070  1FE8                     	;# 
  1071  1FE8                     	;# 
  1072  1FE9                     	;# 
  1073  1FEA                     	;# 
  1074  1FEA                     	;# 
  1075  1FEB                     	;# 
  1076  1FED                     	;# 
  1077  1FEE                     	;# 
  1078  1FEF                     	;# 
  1079  000B                     _INTCON	set	11
  1080  0067                     _RA7	set	103
  1081  00A5                     _TRISC5	set	165
  1082  00A4                     _TRISC4	set	164
  1083  00A3                     _TRISC3	set	163
  1084  0097                     _TRISA7	set	151
  1085  00D1                     _LATC1	set	209
  1086  00A1                     _TRISC1	set	161
  1087  018C                     _SSP1BUF	set	396
  1088  0192                     _SSP1CON3bits	set	402
  1089  018F                     _SSP1STATbits	set	399
  1090  0190                     _SSP1CON1bits	set	400
  1091  3878                     _SSP1IF	set	14456
  1092  081E                     _NVMCON1bits	set	2078
  1093  081F                     _NVMCON2	set	2079
  1094  081C                     _NVMDATL	set	2076
  1095  081D                     _NVMDATH	set	2077
  1096  081E                     _NVMCON1	set	2078
  1097  081A                     _NVMADRL	set	2074
  1098  081B                     _NVMADRH	set	2075
  1099  40F1                     _WR	set	16625
  1100  40F5                     _LWLO	set	16629
  1101  40F2                     _WREN	set	16626
  1102  1EC6                     _SSP1DATPPS	set	7878
  1103  1EC5                     _SSP1CLKPPS	set	7877
  1104  1EC7                     _SSP1SSPPS	set	7879
  1105  1F3F                     _IOCAFbits	set	7999
  1106  1F3D                     _IOCAPbits	set	7997
  1107  1F25                     _RC5PPS	set	7973
  1108  1F4E                     _ANSELC	set	8014
  1109  1F43                     _ANSELB	set	8003
  1110  1F38                     _ANSELA	set	7992
  1111  1FED                     _STKPTR	set	8173
  1112                           
  1113                           ; #config settings
  1114  0000                     
  1115                           	psect	cinit
  1116  0012                     start_initialization:	
  1117  0012                     __initialization:	
  1118                           
  1119                           ; Clear objects allocated to COMMON
  1120  0012  01FC               	clrf	__pbssCOMMON& (0+127)
  1121                           
  1122                           ; Clear objects allocated to BANK0
  1123  0013  3020               	movlw	low __pbssBANK0
  1124  0014  0084               	movwf	4
  1125  0015  3000               	movlw	high __pbssBANK0
  1126  0016  0085               	movwf	5
  1127  0017  3043               	movlw	67
  1128  0018  3181  215B         	fcall	clear_ram0
  1129  001A                     end_of_initialization:	
  1130                           ;End of C runtime variable initialization code
  1131                           
  1132  001A                     __end_of__initialization:	
  1133  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1134  001B  0140               	movlb	0
  1135  001C  3180  28A9         	ljmp	_main	;jump to C main() function
  1136                           
  1137                           	psect	bssCOMMON
  1138  007C                     __pbssCOMMON:	
  1139  007C                     _packetByteIdx:	
  1140  007C                     	ds	1
  1141                           
  1142                           	psect	bssBANK0
  1143  0020                     __pbssBANK0:	
  1144  0020                     _wordAddr:	
  1145  0020                     	ds	2
  1146  0022                     _cmd:	
  1147  0022                     	ds	1
  1148  0023                     _buf:	
  1149  0023                     	ds	64
  1150                           
  1151                           	psect	clrtext
  1152  015B                     clear_ram0:	
  1153                           ;	Called with FSR0 containing the base address, and
  1154                           ;	WREG with the size to clear
  1155                           
  1156  015B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1157  015C                     clrloop0:	
  1158  015C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1159  015D  3101               	addfsr 0,1
  1160  015E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1161  015F  295C               	goto	clrloop0	;have we reached the end yet?
  1162  0160  3400               	retlw	0	;all done for this memory range, return
  1163                           
  1164                           	psect	cstackCOMMON
  1165  0070                     __pcstackCOMMON:	
  1166  0070                     ?_spiInit:	
  1167  0070                     ?_chkSpi:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_haveApp:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_main_isr:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ??_main_isr:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_main:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182                           
  1183                           ; 1 bytes @ 0x0
  1184  0070                     	ds	1
  1185  0071                     ??_spiInit:	
  1186  0071                     ??_haveApp:	
  1187                           ; 1 bytes @ 0x1
  1188                           
  1189  0071                     ?_flash_memory_erase:	
  1190                           ; 1 bytes @ 0x1
  1191                           
  1192  0071                     ?_flash_memory_write:	
  1193                           ; 1 bytes @ 0x1
  1194                           
  1195  0071                     flash_memory_erase@wordAddress:	
  1196                           ; 1 bytes @ 0x1
  1197                           
  1198  0071                     flash_memory_write@wordAddress:	
  1199                           ; 2 bytes @ 0x1
  1200                           
  1201                           
  1202                           ; 2 bytes @ 0x1
  1203  0071                     	ds	2
  1204  0073                     ??_flash_memory_erase:	
  1205  0073                     flash_memory_write@data:	
  1206                           ; 1 bytes @ 0x3
  1207                           
  1208                           
  1209                           ; 1 bytes @ 0x3
  1210  0073                     	ds	1
  1211  0074                     ??_flash_memory_write:	
  1212                           
  1213                           ; 1 bytes @ 0x4
  1214  0074                     	ds	1
  1215  0075                     flash_memory_write@wordIdx:	
  1216                           
  1217                           ; 1 bytes @ 0x5
  1218  0075                     	ds	1
  1219  0076                     ??_chkSpi:	
  1220                           
  1221                           ; 1 bytes @ 0x6
  1222  0076                     	ds	4
  1223  007A                     chkSpi@i:	
  1224                           
  1225                           ; 1 bytes @ 0xA
  1226  007A                     	ds	1
  1227  007B                     chkSpi@byteIn:	
  1228                           
  1229                           ; 1 bytes @ 0xB
  1230  007B                     	ds	1
  1231                           
  1232                           	psect	cstackBANK0
  1233  0063                     __pcstackBANK0:	
  1234  0063                     ??_main:	
  1235                           
  1236                           ; 1 bytes @ 0x0
  1237  0063                     	ds	1
  1238  0064                     main@i:	
  1239                           
  1240                           ; 1 bytes @ 0x1
  1241  0064                     	ds	1
  1242  0065                     main@i_82:	
  1243                           
  1244                           ; 1 bytes @ 0x2
  1245  0065                     	ds	1
  1246                           
  1247                           	psect	maintext
  1248  00A9                     __pmaintext:	
  1249 ;;
  1250 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1251 ;;
  1252 ;; *************** function _main *****************
  1253 ;; Defined at:
  1254 ;;		line 48 in file "main.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  i               1    1[BANK0 ] unsigned char 
  1259 ;;  i               1    2[BANK0 ] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : B3F/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1270 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1271 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1272 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1273 ;;Total ram usage:        3 bytes
  1274 ;; Hardware stack levels required when called:    3
  1275 ;; This function calls:
  1276 ;;		_chkSpi
  1277 ;;		_haveApp
  1278 ;;		_spiInit
  1279 ;; This function is called by:
  1280 ;;		Startup code after reset
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function _main
  1286  00A9                     _main:	
  1287                           
  1288                           ;main.c: 49: INTCON = 0;
  1289                           
  1290                           ;incstack = 0
  1291                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1292  00A9  018B               	clrf	11	;volatile
  1293                           
  1294                           ;main.c: 51: ANSELA = 0;
  1295  00AA  017E               	movlb	62	; select bank62
  1296  00AB  01B8               	clrf	56	;volatile
  1297                           
  1298                           ;main.c: 52: ANSELB = 0;
  1299  00AC  01C3               	clrf	67	;volatile
  1300                           
  1301                           ;main.c: 53: ANSELC = 0;
  1302  00AD  01CE               	clrf	78	;volatile
  1303                           
  1304                           ;main.c: 55: TRISC1 = 0;
  1305  00AE  0140               	movlb	0	; select bank0
  1306  00AF  1094               	bcf	20,1	;volatile
  1307                           
  1308                           ;main.c: 56: LATC1 = 0;
  1309  00B0  109A               	bcf	26,1	;volatile
  1310                           
  1311                           ;main.c: 59: if(haveApp()) {
  1312  00B1  3181  213D  3180   	fcall	_haveApp
  1313  00B4  3A00               	xorlw	0
  1314  00B5  1903               	skipnz
  1315  00B6  28CC               	goto	l893
  1316                           
  1317                           ;main.c: 60: for(char i=0; i < 4; i++) LATC1 = !LATC1;
  1318  00B7  0140               	movlb	0	; select bank0
  1319  00B8  01E4               	clrf	main@i
  1320  00B9  3004               	movlw	4
  1321  00BA  0264               	subwf	main@i,w
  1322  00BB  1803               	btfsc	3,0
  1323  00BC  28C7               	goto	l891
  1324  00BD                     l885:	
  1325  00BD  3002               	movlw	2
  1326  00BE  069A               	xorwf	26,f
  1327  00BF  3001               	movlw	1
  1328  00C0  00E3               	movwf	??_main
  1329  00C1  0863               	movf	??_main,w
  1330  00C2  07E4               	addwf	main@i,f
  1331  00C3  3004               	movlw	4
  1332  00C4  0264               	subwf	main@i,w
  1333  00C5  1C03               	skipc
  1334  00C6  28BD               	goto	l885
  1335  00C7                     l891:	
  1336                           
  1337                           ;main.c: 61: STKPTR = 0x1F;
  1338  00C7  301F               	movlw	31
  1339  00C8  017F               	movlb	63	; select bank63
  1340  00C9  00ED               	movwf	109	;volsfr
  1341  00CA  3182               	pagesel	512	;# 
  1342  00CB  2A00               	goto	512	;# 
  1343  00CC                     l893:	
  1344                           
  1345                           ;main.c: 64: }
  1346                           ;main.c: 66: for(char i=0; i < 2; i++) LATC1 = !LATC1;
  1347  00CC  0140               	movlb	0	; select bank0
  1348  00CD  01E5               	clrf	main@i_82
  1349  00CE  3002               	movlw	2
  1350  00CF  0265               	subwf	main@i_82,w
  1351  00D0  1803               	btfsc	3,0
  1352  00D1  28DC               	goto	l905
  1353  00D2                     l899:	
  1354  00D2  3002               	movlw	2
  1355  00D3  069A               	xorwf	26,f
  1356  00D4  3001               	movlw	1
  1357  00D5  00E3               	movwf	??_main
  1358  00D6  0863               	movf	??_main,w
  1359  00D7  07E5               	addwf	main@i_82,f
  1360  00D8  3002               	movlw	2
  1361  00D9  0265               	subwf	main@i_82,w
  1362  00DA  1C03               	skipc
  1363  00DB  28D2               	goto	l899
  1364  00DC                     l905:	
  1365                           
  1366                           ;main.c: 67: spiInit();
  1367  00DC  3181  2117  3180   	fcall	_spiInit
  1368  00DF                     l907:	
  1369                           ;main.c: 68: while(1) chkSpi();
  1370                           
  1371  00DF  3180  201E  3180   	fcall	_chkSpi
  1372  00E2  28DF               	goto	l907
  1373  00E3                     __end_of_main:	
  1374                           
  1375                           	psect	text1
  1376  0117                     __ptext1:	
  1377 ;; *************** function _spiInit *****************
  1378 ;; Defined at:
  1379 ;;		line 14 in file "spi.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1395 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1396 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1397 ;;Total ram usage:        1 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    1
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           
  1408                           ;psect for function _spiInit
  1409  0117                     _spiInit:	
  1410                           
  1411                           ;spi.c: 15: SSP1SSPPS = 0x07;
  1412                           
  1413                           ;incstack = 0
  1414                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1415  0117  3007               	movlw	7
  1416  0118  017D               	movlb	61	; select bank61
  1417  0119  00C7               	movwf	71	;volatile
  1418                           
  1419                           ;spi.c: 16: SSP1CLKPPS = 0x13;
  1420  011A  3013               	movlw	19
  1421  011B  00C5               	movwf	69	;volatile
  1422                           
  1423                           ;spi.c: 17: SSP1DATPPS = 0x14;
  1424  011C  3014               	movlw	20
  1425  011D  00C6               	movwf	70	;volatile
  1426                           
  1427                           ;spi.c: 18: RC5PPS = 0x16;
  1428  011E  3016               	movlw	22
  1429  011F  017E               	movlb	62	; select bank62
  1430  0120  00A5               	movwf	37	;volatile
  1431                           
  1432                           ;spi.c: 20: TRISA7 = 1;
  1433  0121  0140               	movlb	0	; select bank0
  1434  0122  1792               	bsf	18,7	;volatile
  1435                           
  1436                           ;spi.c: 21: TRISC3 = 1;
  1437  0123  1594               	bsf	20,3	;volatile
  1438                           
  1439                           ;spi.c: 22: TRISC4 = 1;
  1440  0124  1614               	bsf	20,4	;volatile
  1441                           
  1442                           ;spi.c: 23: TRISC5 = 0;
  1443  0125  1294               	bcf	20,5	;volatile
  1444                           
  1445                           ;spi.c: 25: SSP1CON1bits.SSPM = 4;
  1446  0126  0143               	movlb	3	; select bank3
  1447  0127  0810               	movf	16,w	;volatile
  1448  0128  39F0               	andlw	-16
  1449  0129  3804               	iorlw	4
  1450  012A  0090               	movwf	16	;volatile
  1451                           
  1452                           ;spi.c: 26: SSP1STATbits.SMP = 0;
  1453  012B  138F               	bcf	15,7	;volatile
  1454                           
  1455                           ;spi.c: 27: SSP1CON1bits.CKP = 0;
  1456  012C  1210               	bcf	16,4	;volatile
  1457                           
  1458                           ;spi.c: 28: SSP1STATbits.CKE = 1;
  1459  012D  170F               	bsf	15,6	;volatile
  1460                           
  1461                           ;spi.c: 29: SSP1CON3bits.BOEN = 0;
  1462  012E  1212               	bcf	18,4	;volatile
  1463                           
  1464                           ;spi.c: 34: SSP1CON1bits.SSPEN = 1;
  1465  012F  1690               	bsf	16,5	;volatile
  1466                           
  1467                           ;spi.c: 38: SSP1CON1bits.SSPOV = 0;
  1468  0130  1310               	bcf	16,6	;volatile
  1469                           
  1470                           ;spi.c: 39: SSP1CON1bits.WCOL = 0;
  1471  0131  1390               	bcf	16,7	;volatile
  1472                           
  1473                           ;spi.c: 40: IOCAPbits.IOCAP7 = 1;
  1474  0132  017E               	movlb	62	; select bank62
  1475  0133  17BD               	bsf	61,7	;volatile
  1476                           
  1477                           ;spi.c: 41: SSP1IF = 0;
  1478  0134  014E               	movlb	14	; select bank14
  1479  0135  100F               	bcf	15,0	;volatile
  1480                           
  1481                           ;spi.c: 42: IOCAFbits.IOCAF7 = 0;
  1482  0136  017E               	movlb	62	; select bank62
  1483  0137  13BF               	bcf	63,7	;volatile
  1484                           
  1485                           ;spi.c: 44: packetByteIdx = -3;
  1486  0138  30FD               	movlw	253
  1487  0139  00F1               	movwf	??_spiInit
  1488  013A  0871               	movf	??_spiInit,w
  1489  013B  00FC               	movwf	_packetByteIdx
  1490  013C  0008               	return
  1491  013D                     __end_of_spiInit:	
  1492                           
  1493                           	psect	text2
  1494  013D                     __ptext2:	
  1495 ;; *************** function _haveApp *****************
  1496 ;; Defined at:
  1497 ;;		line 11 in file "flash.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      unsigned char 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2, status,0
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1515 ;;Total ram usage:        0 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           
  1526                           ;psect for function _haveApp
  1527  013D                     _haveApp:	
  1528                           
  1529                           ;flash.c: 12: NVMADRH = 0x200 >> 8;
  1530                           
  1531                           ;incstack = 0
  1532                           ; Regs used in _haveApp: [wreg+status,2+status,0]
  1533  013D  3002               	movlw	2
  1534  013E  0150               	movlb	16	; select bank16
  1535  013F  009B               	movwf	27	;volatile
  1536                           
  1537                           ;flash.c: 13: NVMADRL = 0;
  1538  0140  019A               	clrf	26	;volatile
  1539                           
  1540                           ;flash.c: 14: NVMCON1 = 1;
  1541  0141  3001               	movlw	1
  1542  0142  009E               	movwf	30	;volsfr
  1543                           
  1544                           ;flash.c: 15: return ((NVMDATH << 8 | NVMDATL) != 0x3FFF);
  1545  0143  0A1C               	incf	28,w	;volatile
  1546  0144  303F               	movlw	63
  1547  0145  1903               	skipnz
  1548  0146  061D               	xorwf	29,w	;volatile
  1549  0147  1903               	btfsc	3,2
  1550  0148  294B               	goto	u200
  1551  0149  3001               	movlw	1
  1552  014A  0008               	return
  1553  014B                     u200:	
  1554  014B  3000               	movlw	0
  1555  014C  0008               	return
  1556  014D                     __end_of_haveApp:	
  1557                           
  1558                           	psect	text3
  1559  001E                     __ptext3:	
  1560 ;; *************** function _chkSpi *****************
  1561 ;; Defined at:
  1562 ;;		line 47 in file "spi.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  i               1   10[COMMON] unsigned char 
  1567 ;;  byteIn          1   11[COMMON] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      void 
  1570 ;; Registers used:
  1571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1578 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1579 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1580 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1581 ;;Total ram usage:        6 bytes
  1582 ;; Hardware stack levels used:    1
  1583 ;; Hardware stack levels required when called:    2
  1584 ;; This function calls:
  1585 ;;		_flash_memory_erase
  1586 ;;		_flash_memory_write
  1587 ;; This function is called by:
  1588 ;;		_main
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           
  1593                           ;psect for function _chkSpi
  1594  001E                     _chkSpi:	
  1595                           
  1596                           ;spi.c: 48: if(SSP1IF) {
  1597                           
  1598                           ;incstack = 0
  1599                           ; Regs used in _chkSpi: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1600  001E  014E               	movlb	14	; select bank14
  1601  001F  1C0F               	btfss	15,0	;volatile
  1602  0020  2864               	goto	l807
  1603                           
  1604                           ;spi.c: 50: char byteIn = SSP1BUF;
  1605  0021  0143               	movlb	3	; select bank3
  1606  0022  080C               	movf	12,w	;volatile
  1607  0023  00F6               	movwf	??_chkSpi
  1608  0024  0876               	movf	??_chkSpi,w
  1609  0025  00FB               	movwf	chkSpi@byteIn
  1610                           
  1611                           ;spi.c: 51: SSP1IF = 0;
  1612  0026  014E               	movlb	14	; select bank14
  1613  0027  100F               	bcf	15,0	;volatile
  1614                           
  1615                           ;spi.c: 52: SSP1CON1bits.WCOL = 0;
  1616  0028  0143               	movlb	3	; select bank3
  1617  0029  1390               	bcf	16,7	;volatile
  1618                           
  1619                           ;spi.c: 53: if(packetByteIdx < 64) {
  1620  002A  087C               	movf	_packetByteIdx,w
  1621  002B  3A80               	xorlw	128
  1622  002C  3E40               	addlw	-192
  1623  002D  1C03               	btfss	3,0
  1624  002E  2855               	goto	l803
  1625  002F  2860               	goto	l805
  1626  0030                     l793:	
  1627                           ;spi.c: 55: case -3: cmd = byteIn; break;
  1628                           
  1629                           ;spi.c: 54: switch(packetByteIdx) {
  1630                           
  1631  0030  087B               	movf	chkSpi@byteIn,w
  1632  0031  00F6               	movwf	??_chkSpi
  1633  0032  0876               	movf	??_chkSpi,w
  1634  0033  0140               	movlb	0	; select bank0
  1635  0034  00A2               	movwf	_cmd
  1636  0035  2860               	goto	l805
  1637  0036                     l795:	
  1638                           ;spi.c: 56: case -2: wordAddr = byteIn; break;
  1639                           
  1640  0036  087B               	movf	chkSpi@byteIn,w
  1641  0037  00F6               	movwf	??_chkSpi
  1642  0038  01F7               	clrf	??_chkSpi+1
  1643  0039  0876               	movf	??_chkSpi,w
  1644  003A  0140               	movlb	0	; select bank0
  1645  003B  00A0               	movwf	_wordAddr
  1646  003C  0877               	movf	??_chkSpi+1,w
  1647  003D  284A               	goto	L1
  1648  003E                     l797:	
  1649                           ;spi.c: 57: case -1: wordAddr = (wordAddr << 8) | byteIn; break;
  1650                           
  1651  003E  087B               	movf	chkSpi@byteIn,w
  1652  003F  00F6               	movwf	??_chkSpi
  1653  0040  01F7               	clrf	??_chkSpi+1
  1654  0041  0140               	movlb	0	; select bank0
  1655  0042  0820               	movf	_wordAddr,w
  1656  0043  00F9               	movwf	??_chkSpi+3
  1657  0044  01F8               	clrf	??_chkSpi+2
  1658  0045  0876               	movf	??_chkSpi,w
  1659  0046  0478               	iorwf	??_chkSpi+2,w
  1660  0047  00A0               	movwf	_wordAddr
  1661  0048  0877               	movf	??_chkSpi+1,w
  1662  0049  0479               	iorwf	??_chkSpi+3,w
  1663  004A                     L1:	
  1664  004A  00A1               	movwf	_wordAddr+1
  1665  004B  2860               	goto	l805
  1666  004C                     l799:	
  1667                           ;spi.c: 58: default: buf[packetByteIdx] = byteIn; break;
  1668                           
  1669  004C  087B               	movf	chkSpi@byteIn,w
  1670  004D  00F6               	movwf	??_chkSpi
  1671  004E  087C               	movf	_packetByteIdx,w
  1672  004F  3E23               	addlw	(low (_buf| 0))& (0+255)
  1673  0050  0086               	movwf	6
  1674  0051  0187               	clrf	7
  1675  0052  0876               	movf	??_chkSpi,w
  1676  0053  0081               	movwf	1
  1677                           
  1678                           ;spi.c: 59: }
  1679  0054  2860               	goto	l805
  1680  0055                     l803:	
  1681  0055  087C               	movf	_packetByteIdx,w
  1682                           
  1683                           ; Switch size 1, requested type "space"
  1684                           ; Number of cases is 3, Range of values is 253 to 255
  1685                           ; switch strategies available:
  1686                           ; Name         Instructions Cycles
  1687                           ; simple_byte           10     6 (average)
  1688                           ; direct_byte           11     5 (fixed)
  1689                           ; jumptable            263     9 (fixed)
  1690                           ;	Chosen strategy is simple_byte
  1691  0056  3AFD               	xorlw	253	; case 253
  1692  0057  1903               	skipnz
  1693  0058  2830               	goto	l793
  1694  0059  3A03               	xorlw	3	; case 254
  1695  005A  1903               	skipnz
  1696  005B  2836               	goto	l795
  1697  005C  3A01               	xorlw	1	; case 255
  1698  005D  1903               	skipnz
  1699  005E  283E               	goto	l797
  1700  005F  284C               	goto	l799
  1701  0060                     l805:	
  1702                           
  1703                           ;spi.c: 60: }
  1704                           ;spi.c: 61: packetByteIdx++;
  1705  0060  3001               	movlw	1
  1706  0061  00F6               	movwf	??_chkSpi
  1707  0062  0876               	movf	??_chkSpi,w
  1708  0063  07FC               	addwf	_packetByteIdx,f
  1709  0064                     l807:	
  1710                           
  1711                           ;spi.c: 62: }
  1712                           ;spi.c: 63: if(IOCAFbits.IOCAF7) {
  1713  0064  017E               	movlb	62	; select bank62
  1714  0065  1FBF               	btfss	63,7	;volatile
  1715  0066  0008               	return
  1716  0067  2890               	goto	l827
  1717  0068                     l811:	
  1718                           ;spi.c: 66: case 0x20: flash_memory_write(wordAddr, buf); break;
  1719                           
  1720                           ;spi.c: 65: switch (cmd) {
  1721                           
  1722  0068  0140               	movlb	0	; select bank0
  1723  0069  0821               	movf	_wordAddr+1,w
  1724  006A  00F2               	movwf	flash_memory_write@wordAddress+1
  1725  006B  0820               	movf	_wordAddr,w
  1726  006C  00F1               	movwf	flash_memory_write@wordAddress
  1727  006D  3023               	movlw	(low (_buf| 0))& (0+255)
  1728  006E  00F6               	movwf	??_chkSpi
  1729  006F  0876               	movf	??_chkSpi,w
  1730  0070  00F3               	movwf	flash_memory_write@data
  1731  0071  3180  20E3  3180   	fcall	_flash_memory_write
  1732  0074  289C               	goto	l134
  1733  0075                     l813:	
  1734                           ;spi.c: 67: case 0x10: flash_memory_erase(wordAddr); break;
  1735                           
  1736  0075  0140               	movlb	0	; select bank0
  1737  0076  0821               	movf	_wordAddr+1,w
  1738  0077  00F2               	movwf	flash_memory_erase@wordAddress+1
  1739  0078  0820               	movf	_wordAddr,w
  1740  0079  00F1               	movwf	flash_memory_erase@wordAddress
  1741  007A  3181  214D  3180   	fcall	_flash_memory_erase
  1742  007D  289C               	goto	l134
  1743  007E                     l815:	
  1744                           ;spi.c: 68: case 0x30:
  1745                           
  1746                           
  1747                           ;spi.c: 69: for(char i=0; i < 6; i++) LATC1 = !LATC1;
  1748  007E  01FA               	clrf	chkSpi@i
  1749  007F  3006               	movlw	6
  1750  0080  027A               	subwf	chkSpi@i,w
  1751  0081  1803               	btfsc	3,0
  1752  0082  288E               	goto	l133
  1753  0083                     l821:	
  1754  0083  3002               	movlw	2
  1755  0084  0140               	movlb	0	; select bank0
  1756  0085  069A               	xorwf	26,f
  1757  0086  3001               	movlw	1
  1758  0087  00F6               	movwf	??_chkSpi
  1759  0088  0876               	movf	??_chkSpi,w
  1760  0089  07FA               	addwf	chkSpi@i,f
  1761  008A  3006               	movlw	6
  1762  008B  027A               	subwf	chkSpi@i,w
  1763  008C  1C03               	skipc
  1764  008D  2883               	goto	l821
  1765  008E                     l133:	
  1766  008E  0001               	reset	;# 
  1767                           
  1768                           ;spi.c: 71: }
  1769  008F  289C               	goto	l134
  1770  0090                     l827:	
  1771  0090  0140               	movlb	0	; select bank0
  1772  0091  0822               	movf	_cmd,w
  1773                           
  1774                           ; Switch size 1, requested type "space"
  1775                           ; Number of cases is 3, Range of values is 16 to 48
  1776                           ; switch strategies available:
  1777                           ; Name         Instructions Cycles
  1778                           ; simple_byte           10     6 (average)
  1779                           ; direct_byte           75     9 (fixed)
  1780                           ; jumptable            263     9 (fixed)
  1781                           ;	Chosen strategy is simple_byte
  1782  0092  3A10               	xorlw	16	; case 16
  1783  0093  1903               	skipnz
  1784  0094  2875               	goto	l813
  1785  0095  3A30               	xorlw	48	; case 32
  1786  0096  1903               	skipnz
  1787  0097  2868               	goto	l811
  1788  0098  3A10               	xorlw	16	; case 48
  1789  0099  1903               	skipnz
  1790  009A  287E               	goto	l815
  1791  009B  289C               	goto	l134
  1792  009C                     l134:	
  1793                           ;spi.c: 74: while(!RA7);
  1794                           
  1795  009C  0140               	movlb	0	; select bank0
  1796  009D  1F8C               	btfss	12,7	;volatile
  1797  009E  289C               	goto	l134
  1798                           
  1799                           ;spi.c: 75: SSP1BUF = 7;
  1800  009F  3007               	movlw	7
  1801  00A0  0143               	movlb	3	; select bank3
  1802  00A1  008C               	movwf	12	;volatile
  1803                           
  1804                           ;spi.c: 76: packetByteIdx = -3;
  1805  00A2  30FD               	movlw	253
  1806  00A3  00F6               	movwf	??_chkSpi
  1807  00A4  0876               	movf	??_chkSpi,w
  1808  00A5  00FC               	movwf	_packetByteIdx
  1809                           
  1810                           ;spi.c: 77: IOCAFbits.IOCAF7 = 0;
  1811  00A6  017E               	movlb	62	; select bank62
  1812  00A7  13BF               	bcf	63,7	;volatile
  1813  00A8  0008               	return
  1814  00A9                     __end_of_chkSpi:	
  1815                           
  1816                           	psect	text4
  1817  00E3                     __ptext4:	
  1818 ;; *************** function _flash_memory_write *****************
  1819 ;; Defined at:
  1820 ;;		line 30 in file "flash.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  wordAddress     2    1[COMMON] unsigned int 
  1823 ;;  data            1    3[COMMON] PTR unsigned char 
  1824 ;;		 -> buf(64), 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  wordIdx         1    5[COMMON] unsigned char 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1836 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1839 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1840 ;;Total ram usage:        5 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:    1
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_chkSpi
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           
  1851                           ;psect for function _flash_memory_write
  1852  00E3                     _flash_memory_write:	
  1853                           
  1854                           ;flash.c: 31: char wordIdx;
  1855                           ;flash.c: 32: NVMCON1 = 0x24;
  1856                           
  1857                           ;incstack = 0
  1858                           ; Regs used in _flash_memory_write: [wreg+fsr1l+fsr1h+status,2+status,0]
  1859  00E3  3024               	movlw	36
  1860  00E4  0150               	movlb	16	; select bank16
  1861  00E5  009E               	movwf	30	;volsfr
  1862                           
  1863                           ;flash.c: 33: for (wordIdx=0; wordIdx < 32; wordIdx++) {
  1864  00E6  01F5               	clrf	flash_memory_write@wordIdx
  1865  00E7  3020               	movlw	32
  1866  00E8  0275               	subwf	flash_memory_write@wordIdx,w
  1867  00E9  1803               	btfsc	3,0
  1868  00EA  2915               	goto	l30
  1869  00EB                     l717:	
  1870                           
  1871                           ;flash.c: 34: NVMADRL = ((wordAddress) & 0xff);
  1872  00EB  0871               	movf	flash_memory_write@wordAddress,w
  1873  00EC  009A               	movwf	26	;volatile
  1874                           
  1875                           ;flash.c: 35: NVMADRH = ( wordAddress >> 8 );
  1876  00ED  0872               	movf	flash_memory_write@wordAddress+1,w
  1877  00EE  009B               	movwf	27	;volatile
  1878                           
  1879                           ;flash.c: 36: if(wordIdx == 32-1)
  1880  00EF  301F               	movlw	31
  1881  00F0  0675               	xorwf	flash_memory_write@wordIdx,w
  1882  00F1  1903               	btfsc	3,2
  1883                           
  1884                           ;flash.c: 37: LWLO = 0;
  1885  00F2  129E               	bcf	30,5	;volsfr
  1886                           
  1887                           ;flash.c: 38: NVMDATL = data[wordIdx*2];
  1888  00F3  3575               	lslf	flash_memory_write@wordIdx,w
  1889  00F4  0773               	addwf	flash_memory_write@data,w
  1890  00F5  00F4               	movwf	??_flash_memory_write
  1891  00F6  0874               	movf	??_flash_memory_write,w
  1892  00F7  0086               	movwf	6
  1893  00F8  0187               	clrf	7
  1894  00F9  0801               	movf	1,w
  1895  00FA  009C               	movwf	28	;volatile
  1896                           
  1897                           ;flash.c: 39: NVMDATH = data[wordIdx*2+1];
  1898  00FB  1403               	setc
  1899  00FC  0D75               	rlf	flash_memory_write@wordIdx,w
  1900  00FD  0773               	addwf	flash_memory_write@data,w
  1901  00FE  00F4               	movwf	??_flash_memory_write
  1902  00FF  0874               	movf	??_flash_memory_write,w
  1903  0100  0086               	movwf	6
  1904  0101  0187               	clrf	7
  1905  0102  0801               	movf	1,w
  1906  0103  009D               	movwf	29	;volatile
  1907                           
  1908                           ;flash.c: 40: NVMCON2 = 0x55;
  1909  0104  3055               	movlw	85
  1910  0105  009F               	movwf	31	;volsfr
  1911                           
  1912                           ;flash.c: 41: NVMCON2 = 0xaa;
  1913  0106  30AA               	movlw	170
  1914  0107  009F               	movwf	31	;volsfr
  1915                           
  1916                           ;flash.c: 42: WR = 1;
  1917  0108  149E               	bsf	30,1	;volsfr
  1918                           
  1919                           ;flash.c: 43: wordAddress++;
  1920  0109  3001               	movlw	1
  1921  010A  07F1               	addwf	flash_memory_write@wordAddress,f
  1922  010B  3000               	movlw	0
  1923  010C  3DF2               	addwfc	flash_memory_write@wordAddress+1,f
  1924  010D  3001               	movlw	1
  1925  010E  00F4               	movwf	??_flash_memory_write
  1926  010F  0874               	movf	??_flash_memory_write,w
  1927  0110  07F5               	addwf	flash_memory_write@wordIdx,f
  1928  0111  3020               	movlw	32
  1929  0112  0275               	subwf	flash_memory_write@wordIdx,w
  1930  0113  1C03               	skipc
  1931  0114  28EB               	goto	l717
  1932  0115                     l30:	
  1933                           
  1934                           ;flash.c: 44: }
  1935                           ;flash.c: 46: WREN = 0;
  1936  0115  111E               	bcf	30,2	;volsfr
  1937  0116  0008               	return
  1938  0117                     __end_of_flash_memory_write:	
  1939                           
  1940                           	psect	text5
  1941  014D                     __ptext5:	
  1942 ;; *************** function _flash_memory_erase *****************
  1943 ;; Defined at:
  1944 ;;		line 19 in file "flash.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  wordAddress     2    1[COMMON] unsigned int 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1961 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1962 ;;Total ram usage:        2 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    1
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_chkSpi
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           
  1973                           ;psect for function _flash_memory_erase
  1974  014D                     _flash_memory_erase:	
  1975                           
  1976                           ;flash.c: 20: NVMADRL = ((wordAddress) & 0xff);
  1977                           
  1978                           ;incstack = 0
  1979                           ; Regs used in _flash_memory_erase: [wreg+status,2]
  1980  014D  0871               	movf	flash_memory_erase@wordAddress,w
  1981  014E  0150               	movlb	16	; select bank16
  1982  014F  009A               	movwf	26	;volatile
  1983                           
  1984                           ;flash.c: 21: NVMADRH = ( wordAddress >> 8 );
  1985  0150  0872               	movf	flash_memory_erase@wordAddress+1,w
  1986  0151  009B               	movwf	27	;volatile
  1987                           
  1988                           ;flash.c: 22: NVMCON1 = 0x94;
  1989  0152  3094               	movlw	148
  1990  0153  009E               	movwf	30	;volsfr
  1991                           
  1992                           ;flash.c: 23: NVMCON2 = 0x55;
  1993  0154  3055               	movlw	85
  1994  0155  009F               	movwf	31	;volsfr
  1995                           
  1996                           ;flash.c: 24: NVMCON2 = 0xaa;
  1997  0156  30AA               	movlw	170
  1998  0157  009F               	movwf	31	;volsfr
  1999                           
  2000                           ;flash.c: 25: NVMCON1bits.WR = 1;
  2001  0158  149E               	bsf	30,1	;volsfr
  2002                           
  2003                           ;flash.c: 27: WREN = 0;
  2004  0159  111E               	bcf	30,2	;volsfr
  2005  015A  0008               	return
  2006  015B                     __end_of_flash_memory_erase:	
  2007                           
  2008                           	psect	intentry
  2009  0004                     __pintentry:	
  2010 ;; *************** function _main_isr *****************
  2011 ;; Defined at:
  2012 ;;		line 43 in file "main.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		None
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2028 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2029 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2030 ;;Total ram usage:        1 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		Interrupt level 1
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039  0004                     _main_isr:	
  2040                           
  2041                           ;incstack = 0
  2042  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2043                           
  2044                           ; Regs used in _main_isr: []
  2045  0005  3180               	pagesel	$
  2046  0006  0140               	movlb	0	; select bank0
  2047  0007  087F               	movf	127,w
  2048  0008  00F0               	movwf	??_main_isr
  2049  0009  3182               	pagesel	516	;# 
  2050  000A  2A04               	goto	516	;# 
  2051  000B  0870               	movf	??_main_isr,w
  2052  000C  0140               	movlb	0	; select bank0
  2053  000D  00FF               	movwf	127
  2054  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2055  000F  0009               	retfie
  2056  0010                     __end_of_main_isr:	
  2057  007E                     btemp	set	126	;btemp
  2058  007E                     int$flags	set	126
  2059  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      3      70
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    flash_memory_write@data	PTR unsigned char  size(1) Largest target is 64
		 -> buf(BANK0[64]), 


Critical Paths under _main in COMMON

    _main->_chkSpi
    _chkSpi->_flash_memory_write

Critical Paths under _main_isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     675
                                              0 BANK0      3     3      0
                             _chkSpi
                            _haveApp
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _haveApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _chkSpi                                               6     6      0     539
                                              6 COMMON     6     6      0
                 _flash_memory_erase
                 _flash_memory_write
 ---------------------------------------------------------------------------------
 (2) _flash_memory_write                                   5     2      3     307
                                              1 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (2) _flash_memory_erase                                   2     0      2      97
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _main_isr                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _chkSpi
     _flash_memory_erase
     _flash_memory_write
   _haveApp
   _spiInit

 _main_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      53       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      3      46       6       87.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      53      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Mar  5 00:36:42 2017

                  __CFG_CP$OFF 0000                             l30 0115                             _WR 40F1  
                 __CFG_BBEN$ON 0000                            l133 008E                            l134 009C  
                          l811 0068                            l803 0055                            l717 00EB  
                          l821 0083                            l813 0075                            l805 0060  
                          l815 007E                            l807 0064                            l905 00DC  
                          l827 0090                            l907 00DF                            l793 0030  
                          l795 0036                            l891 00C7                            l797 003E  
                          l885 00BD                            l893 00CC                            l799 004C  
                          l899 00D2                            _RA7 0067                            u200 014B  
                          _cmd 0022                            _buf 0023                   __CFG_BORV$LO 0000  
                          wreg 0009                   __CFG_LVP$OFF 0000                   __CFG_ZCD$OFF 0000  
                         _LWLO 40F5                           _WREN 40F2                  __CFG_FCMEN$ON 0000  
                         _main 00A9                           fsr0h 0005                           fsr1h 0007  
                         indf0 0000                           fsr0l 0004                           indf1 0001  
                         fsr1l 0006                           btemp 007E                  __CFG_BOREN$ON 0000  
                         start 0010                  __CFG_CSWEN$ON 0000                  __CFG_MCLRE$ON 0000  
                        ?_main 0070                  __CFG_WDTE$OFF 0000                          _LATC1 00D1  
              __end_of_haveApp 014D                  __CFG_WRTB$OFF 0000                  __CFG_WRTC$OFF 0000  
                        main@i 0064                __end_of_spiInit 013D                          status 0003  
                        wtemp0 007E                __initialization 0012                   __end_of_main 00E3  
               __CFG_SAFEN$OFF 0000                         ??_main 0063             _flash_memory_erase 014D  
           _flash_memory_write 00E3                         _ANSELA 1F38                         _ANSELB 1F43  
                       _ANSELC 1F4E                  _packetByteIdx 007C            ?_flash_memory_erase 0071  
                       _RC5PPS 1F25                 __CFG_WDTCCS$SC 0000                         _INTCON 000B  
          ?_flash_memory_write 0071                         _SSP1IF 3878                         _TRISC1 00A1  
                       _TRISA7 0097                         _TRISC3 00A3                         _TRISC4 00A4  
                       _TRISC5 00A5                         _STKPTR 1FED                 __CFG_PWRTE$OFF 0000  
             __end_of_main_isr 0010                 __CFG_STVREN$ON 0000                         _chkSpi 001E  
         ??_flash_memory_erase 0073           ??_flash_memory_write 0074                      ??_haveApp 0071  
                    ??_spiInit 0071        __end_of__initialization 001A                 __pcstackCOMMON 0070  
                   __pbssBANK0 0020                     __pmaintext 00A9                        ?_chkSpi 0070  
              __CFG_PPS1WAY$ON 0000                     __pintentry 0004            __CFG_RSTOSC$HFINT32 0000  
                      _NVMADRH 081B                        _NVMADRL 081A                        _NVMDATH 081D  
                      _NVMDATL 081C                        _NVMCON1 081E                        _NVMCON2 081F  
                      _SSP1BUF 018C                      ?_main_isr 0070                __size_of_chkSpi 008B  
flash_memory_write@wordAddress 0071                        _haveApp 013D                        __ptext1 0117  
                      __ptext2 013D                        __ptext3 001E                        __ptext4 00E3  
                      __ptext5 014D                __CFG_WRTAPP$OFF 0000                        chkSpi@i 007A  
                    _IOCAFbits 1F3F                __CFG_WRTSAF$OFF 0000                        _spiInit 0117  
                    _IOCAPbits 1F3D                        clrloop0 015C           end_of_initialization 001A  
                   ??_main_isr 0070          __CFG_WDTCPS$WDTCPS_31 0000                      _SSP1SSPPS 1EC7  
             __CFG_FEXTOSC$OFF 0000    __size_of_flash_memory_erase 000E                 __end_of_chkSpi 00A9  
  __size_of_flash_memory_write 0034            start_initialization 0012      flash_memory_write@wordIdx 0075  
             __CFG_LPBOREN$OFF 0000                       ??_chkSpi 0076  flash_memory_erase@wordAddress 0071  
                 chkSpi@byteIn 007B         flash_memory_write@data 0073                    __pbssCOMMON 007C  
                    ___latbits 0002                  __pcstackBANK0 0063              __size_of_main_isr 000C  
                     ?_haveApp 0070                       ?_spiInit 0070                      clear_ram0 015B  
            __CFG_BBSIZE$BB512 0000               __size_of_haveApp 0010               __size_of_spiInit 0026  
                 _SSP1CON1bits 0190                   _SSP1CON3bits 0192                       _main_isr 0004  
                __size_of_main 003A           __CFG_WDTCWS$WDTCWS_7 0000     __end_of_flash_memory_erase 015B  
                     int$flags 007E     __end_of_flash_memory_write 0117                       main@i_82 0065  
                     _wordAddr 0020                   _SSP1STATbits 018F                    _NVMCON1bits 081E  
                     intlevel1 0000              __CFG_CLKOUTEN$OFF 0000                     _SSP1DATPPS 1EC6  
                   _SSP1CLKPPS 1EC5  
